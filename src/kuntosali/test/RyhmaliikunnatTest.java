package kuntosali.test;
// Generated by ComTest BEGIN
import kuntosali.*;
import java.util.*;
import java.io.File;
import static org.junit.Assert.*;
import org.junit.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2020.08.02 12:22:23 // Generated by ComTest
 *
 */
@SuppressWarnings({ "all" })
public class RyhmaliikunnatTest {



  // Generated by ComTest BEGIN
  /** testIterator143 */
  @Test
  public void testIterator143() {    // Ryhmaliikunnat: 143
    Ryhmaliikunnat ryhmat = new Ryhmaliikunnat(); 
    Ryhmaliikunta pitsi21 = new Ryhmaliikunta(2); ryhmat.lisaa(pitsi21); 
    Ryhmaliikunta pitsi11 = new Ryhmaliikunta(1); ryhmat.lisaa(pitsi11); 
    Ryhmaliikunta pitsi22 = new Ryhmaliikunta(2); ryhmat.lisaa(pitsi22); 
    Ryhmaliikunta pitsi12 = new Ryhmaliikunta(1); ryhmat.lisaa(pitsi12); 
    Ryhmaliikunta pitsi23 = new Ryhmaliikunta(2); ryhmat.lisaa(pitsi23); 
    Iterator<Ryhmaliikunta> i2=ryhmat.iterator(); 
    assertEquals("From: Ryhmaliikunnat line: 155", pitsi21, i2.next()); 
    assertEquals("From: Ryhmaliikunnat line: 156", pitsi11, i2.next()); 
    assertEquals("From: Ryhmaliikunnat line: 157", pitsi22, i2.next()); 
    assertEquals("From: Ryhmaliikunnat line: 158", pitsi12, i2.next()); 
    assertEquals("From: Ryhmaliikunnat line: 159", pitsi23, i2.next()); 
    try {
    assertEquals("From: Ryhmaliikunnat line: 160", pitsi12, i2.next()); 
    fail("Ryhmaliikunnat: 160 Did not throw NoSuchElementException");
    } catch(NoSuchElementException _e_){ _e_.getMessage(); }
    int n = 0; 
    int anrot[] = { 2,1,2,1,2} ; 
    for ( Ryhmaliikunta ryhma:ryhmat ) {
    assertEquals("From: Ryhmaliikunnat line: 166", anrot[n], ryhma.getAsiakasNro()); n++; 
    }
    assertEquals("From: Ryhmaliikunnat line: 169", 5, n); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testPoista215 
   * @throws SailoException when error
   */
  @Test
  public void testPoista215() throws SailoException {    // Ryhmaliikunnat: 215
    Ryhmaliikunnat harrasteet = new Ryhmaliikunnat(); 
    Ryhmaliikunta pitsi21 = new Ryhmaliikunta(); pitsi21.taytaRyhmaliikunta(2); 
    Ryhmaliikunta pitsi11 = new Ryhmaliikunta(); pitsi11.taytaRyhmaliikunta(1); 
    Ryhmaliikunta pitsi22 = new Ryhmaliikunta(); pitsi22.taytaRyhmaliikunta(2); 
    Ryhmaliikunta pitsi12 = new Ryhmaliikunta(); pitsi12.taytaRyhmaliikunta(1); 
    Ryhmaliikunta pitsi23 = new Ryhmaliikunta(); pitsi23.taytaRyhmaliikunta(2); 
    harrasteet.lisaa(pitsi21); 
    harrasteet.lisaa(pitsi11); 
    harrasteet.lisaa(pitsi22); 
    harrasteet.lisaa(pitsi12); 
    assertEquals("From: Ryhmaliikunnat line: 228", false, harrasteet.poista(pitsi23)); assertEquals("From: Ryhmaliikunnat line: 228", 4, harrasteet.getLkm()); 
    assertEquals("From: Ryhmaliikunnat line: 229", true, harrasteet.poista(pitsi11)); assertEquals("From: Ryhmaliikunnat line: 229", 3, harrasteet.getLkm()); 
    List<Ryhmaliikunta> h = harrasteet.annaRyhmaliikunnat(1); 
    assertEquals("From: Ryhmaliikunnat line: 231", 1, h.size()); 
    assertEquals("From: Ryhmaliikunnat line: 232", pitsi12, h.get(0)); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testKorvaaTaiLisaa248 
   * @throws SailoException when error
   * @throws CloneNotSupportedException when error
   */
  @Test
  public void testKorvaaTaiLisaa248() throws SailoException,CloneNotSupportedException {    // Ryhmaliikunnat: 248
    Ryhmaliikunnat harrastukset = new Ryhmaliikunnat(); 
    Ryhmaliikunta har1 = new Ryhmaliikunta(), har2 = new Ryhmaliikunta(); 
    har1.rekisteroi(); har2.rekisteroi(); 
    assertEquals("From: Ryhmaliikunnat line: 254", 0, harrastukset.getLkm()); 
    harrastukset.korvaaTaiLisaa(har1); assertEquals("From: Ryhmaliikunnat line: 255", 1, harrastukset.getLkm()); 
    harrastukset.korvaaTaiLisaa(har2); assertEquals("From: Ryhmaliikunnat line: 256", 2, harrastukset.getLkm()); 
    Ryhmaliikunta har3 = har1.clone(); 
    har3.aseta(2,"kkk"); 
    Iterator<Ryhmaliikunta> i2=harrastukset.iterator(); 
    assertEquals("From: Ryhmaliikunnat line: 260", har1, i2.next()); 
    harrastukset.korvaaTaiLisaa(har3); assertEquals("From: Ryhmaliikunnat line: 261", 2, harrastukset.getLkm()); 
    i2=harrastukset.iterator(); 
    Ryhmaliikunta h = i2.next(); 
    assertEquals("From: Ryhmaliikunnat line: 264", har3, h); 
    assertEquals("From: Ryhmaliikunnat line: 265", true, h == har3); 
    assertEquals("From: Ryhmaliikunnat line: 266", false, h == har1); 
  } // Generated by ComTest END
}