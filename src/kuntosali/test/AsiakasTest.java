package kuntosali.test;
// Generated by ComTest BEGIN
import static org.junit.Assert.*;
import org.junit.*;
import kuntosali.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2020.07.29 15:57:33 // Generated by ComTest
 *
 */
@SuppressWarnings({ "all" })
public class AsiakasTest {



  // Generated by ComTest BEGIN
  /** testGetNimi70 */
  @Test
  public void testGetNimi70() {    // Asiakas: 70
    Asiakas asiakas = new Asiakas(); 
    asiakas.taytaAsiakas(); 
    { String _l_=asiakas.getNimi(),_r_="Ismo Laitela .*"; if ( !_l_.matches(_r_) ) fail("From: Asiakas line: 73" + " does not match: ["+ _l_ + "] != [" + _r_ + "]");}; 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testRekisteroi127 */
  @Test
  public void testRekisteroi127() {    // Asiakas: 127
    Asiakas testi1 = new Asiakas(); 
    assertEquals("From: Asiakas line: 129", 0, testi1.getTunnusNro()); 
    testi1.rekisteroi(); 
    Asiakas testi2 = new Asiakas(); 
    testi2.rekisteroi(); 
    int n1 = testi1.getTunnusNro(); 
    int n2 = testi2.getTunnusNro(); 
    assertEquals("From: Asiakas line: 135", n2-1, n1); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testToString158 */
  @Test
  public void testToString158() {    // Asiakas: 158
    Asiakas asiakas = new Asiakas(); 
    asiakas.parse("   3  |  Ankka Aku   | 030201-111C"); 
    assertEquals("From: Asiakas line: 161", true, asiakas.toString().startsWith("3|Ankka Aku|030201-111C|"));  // on enemmäkin kuin 3 kenttää, siksi loppu |
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testParse179 */
  @Test
  public void testParse179() {    // Asiakas: 179
    Asiakas asiakas = new Asiakas(); 
    asiakas.parse("   3  |  Ankka Aku   | 030201-111C"); 
    assertEquals("From: Asiakas line: 182", 3, asiakas.getTunnusNro()); 
    assertEquals("From: Asiakas line: 183", true, asiakas.toString().startsWith("3|Ankka Aku|030201-111C|"));  // on enemmäkin kuin 3 kenttää, siksi loppu |
    asiakas.rekisteroi(); 
    int n = asiakas.getTunnusNro(); 
    asiakas.parse(""+(n+20));  // Otetaan merkkijonosta vain tunnusnumero
    asiakas.rekisteroi();  // ja tarkistetaan että seuraavalla kertaa tulee yhtä isompi
    assertEquals("From: Asiakas line: 189", n+20+1, asiakas.getTunnusNro()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testClone210 
   * @throws CloneNotSupportedException when error
   */
  @Test
  public void testClone210() throws CloneNotSupportedException {    // Asiakas: 210
    Asiakas asiakas = new Asiakas(); 
    asiakas.parse("   3  |  Ankka Aku   | 123"); 
    Asiakas kopio = asiakas.clone(); 
    assertEquals("From: Asiakas line: 215", asiakas.toString(), kopio.toString()); 
    asiakas.parse("   4  |  Ankka Tupu   | 123"); 
    assertEquals("From: Asiakas line: 217", false, kopio.toString().equals(asiakas.toString())); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testAseta410 */
  @Test
  public void testAseta410() {    // Asiakas: 410
    Asiakas jasen = new Asiakas(); 
    assertEquals("From: Asiakas line: 412", null, jasen.aseta(1,"Ankka Aku")); 
    assertEquals("From: Asiakas line: 413", null, jasen.aseta(2,"030201-111C")); 
    assertEquals("From: Asiakas line: 414", null, jasen.aseta(9,"1940")); 
  } // Generated by ComTest END
}